{"version":3,"sources":["../src/index.ts","index.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Settings","require","indexRouter","topologyRouter","init","Models","sequelize","sync","app","use","listen","port","console","log","process","on","err","error","exit"],"mappings":";;AAAA;;;;AACA;;;;;;ACDA,IAAIA,SAAS,GAAI,aAAQ,UAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAeC,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;AAAEA,MAAAA,OAAO,CAACD,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBR,KAAlB,EAAyB;AAAE,UAAI;AAAEK,QAAAA,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOO,CAAP,EAAU;AAAEJ,QAAAA,MAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,IAAAA,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;ADGA,MAAMO,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AAEA,MAAMC,WAAW,GAAGD,OAAO,CAAC,oBAAD,CAA3B;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,uBAAD,CAA9B;;AAEA,MAAMG,IAAI,GAAG,MAAWvB,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACpBwB,mBAAOC,SAAP,CAAiBC,IAAjB;;AACA,QAAMC,GAAG,GAAG,wBAAZ;AAEAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaP,WAAb;AACAM,EAAAA,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBN,cAArB;AAEAK,EAAAA,GAAG,CAACE,MAAJ,CAAWV,QAAQ,CAACW,IAApB,EAA0B,MAAK;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBb,QAAQ,CAACW,IAAI,EAA9C;AACH,GAFD;AAGH,CAVuB,CAAxB;;AAYAG,OAAO,CAACC,EAAR,CAAW,oBAAX,EAAiCC,GAAG,IAAG;AACnCJ,EAAAA,OAAO,CAACK,KAAR,CAAcD,GAAd;AACAF,EAAAA,OAAO,CAACI,IAAR,CAAa,CAAb;AACH,CAHD;AAKAd,IAAI","file":"index.js","sourcesContent":["import express from 'express'\nimport Models from \"./lib/models/\"\n\nconst Settings = require('./settings')\n\nconst indexRouter = require('./lib/routes/index')\nconst topologyRouter = require('./lib/routes/topology')\n\nconst init = async () => {\n    Models.sequelize.sync()\n    const app = express()\n\n    app.use('/', indexRouter)\n    app.use('/topology', topologyRouter)\n\n    app.listen(Settings.port, () => {\n        console.log(`Listening on port ${Settings.port}`)\n    })\n}\n\nprocess.on('unhandledRejection', err => {\n    console.error(err)\n    process.exit(1)\n})\n\ninit()","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport express from 'express';\nimport Models from \"./lib/models/\";\nconst Settings = require('./settings');\nconst indexRouter = require('./lib/routes/index');\nconst topologyRouter = require('./lib/routes/topology');\nconst init = () => __awaiter(void 0, void 0, void 0, function* () {\n    Models.sequelize.sync();\n    const app = express();\n    app.use('/', indexRouter);\n    app.use('/topology', topologyRouter);\n    app.listen(Settings.port, () => {\n        console.log(`Listening on port ${Settings.port}`);\n    });\n});\nprocess.on('unhandledRejection', err => {\n    console.error(err);\n    process.exit(1);\n});\ninit();\n"]}